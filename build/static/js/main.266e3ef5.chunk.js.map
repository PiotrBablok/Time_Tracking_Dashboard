{"version":3,"sources":["components/person_card/PersonCard.tsx","components/person_activities/PersonActivities.tsx","App.tsx","index.tsx"],"names":["Dummy_Person","name","lastName","img","PersonCard","props","useState","person","setPerson","a","fetch","method","fetchData","json","bodyParse","results","first","last","picture","large","liftData","scope","scopeFn","useEffect","getUserData","className","src","alt","onClick","bind","PersonActivities","activities","setActivities","data","getActivityData","id","map","el","target","interval","console","log","title","timeframes","current","previous","timeScope","newScope","App","setScope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oqCAiBMA,EAAkC,CAAC,CACrCC,KAAM,GACNC,SAAU,GACVC,IAAK,KA+CMC,EA5C+B,SAACC,GAAW,IAAD,EAEzBC,mBAA4BN,GAFH,mBAE9CO,EAF8C,KAEtCC,EAFsC,iDAQrD,gCAAAC,EAAA,sEAC4BC,MAAM,6BAA8B,CACxDC,OAAQ,QAFhB,cACUC,EADV,gBAI4BA,EAAUC,OAJtC,OAIUC,EAJV,OAMUP,EAA0B,CAC5BN,KAAMa,EAAUC,QAAQ,GAAGd,KAAKe,MAChCd,SAAUY,EAAUC,QAAQ,GAAGd,KAAKgB,KACpCd,IAAKW,EAAUC,QAAQ,GAAGG,QAAQC,OAGtCX,EAAU,CAACD,IAZf,4CARqD,sBAuBrD,SAASa,EAASC,GACdhB,EAAMiB,QAAQD,GAIlB,OAxBAE,qBAAU,YAJ2C,mCAKjDC,KACD,IAuBC,sBAAKC,UAAU,gBAAf,UACI,sBAAKA,UAAU,wBAAf,UACwB,KAAlBlB,EAAO,GAAGJ,IAAa,qBAAKuB,IAAKnB,EAAO,GAAGJ,IAAKwB,IAAI,KAAQ,GAC9D,2CACA,uCAAQpB,EAAO,GAAGN,KAAlB,YAA0BM,EAAO,GAAGL,eAExC,sBAAKuB,UAAU,uBAAf,UACI,wBAAQG,QAASR,EAASS,KAAK,GAAI,SAAnC,mBACA,wBAAQD,QAASR,EAASS,KAAK,GAAI,UAAnC,oBACA,wBAAQD,QAASR,EAASS,KAAK,GAAI,WAAnC,4B,OCWDC,G,MA3C2C,SAACzB,GAAW,IAAD,EAE7BC,mBAA4B,IAFC,mBAE1DyB,EAF0D,KAE9CC,EAF8C,iDAUjE,sBAAAvB,EAAA,sDACIuB,EAAcC,GADlB,4CAViE,sBA+BjE,OA1BAV,qBAAU,YALuD,mCAM7DW,KACD,IAyBC,qBAAKC,GAAG,aAAaV,UAAU,aAA/B,SAEQM,EAAWK,KAAI,SAAAC,GACX,OArBhB,SAAmBA,EAAqBC,GACpC,IAAMC,EAAuB,UAAXD,EAAqB,MAAoB,WAAXA,EAAsB,OAAS,QAE/E,OADAE,QAAQC,IAAIJ,GAER,qBAAKZ,UAAU,qBAAf,SACI,qBAAKA,UAAS,6BAAwBY,EAAGK,MAA3B,2BAA2DP,GAAIE,EAAGK,MAAhF,SACI,sBAAKjB,UAAU,0BAAf,UACI,4BAAIY,EAAGK,QACP,oCACA,8BAAIL,EAAGM,WAAWL,GAAQM,QAA1B,SACA,sCAASL,EAAT,MAAsBF,EAAGM,WAAWL,GAAQO,SAA5C,eAN6BR,EAAGK,OAiB5BI,CAAUT,EAAIhC,EAAM0C,iB,MCvCjCC,MAjBf,WAAgB,IAAD,EAEa1C,mBAAqB,SAFlC,mBAENe,EAFM,KAEC4B,EAFD,KASb,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CAAYH,QAPK,SAACyB,GACpBE,EAASF,MAOP,cAAC,EAAD,CAAkBA,SAAU1B,QCflC6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.266e3ef5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport './PersonCard.css'\r\n\r\nimport { scopeState } from '../../utilities/ScopeState' // TS type\r\n\r\ninterface PersonInfoState {\r\n    name: string;\r\n    lastName: string;\r\n    img: string;\r\n}\r\n\r\ninterface PersonCardProps {\r\n    scopeFn: (newScope: scopeState) => void;\r\n}\r\n\r\n\r\nconst Dummy_Person: PersonInfoState[] = [{\r\n    name: '',\r\n    lastName: '',\r\n    img: '',\r\n}]\r\n\r\nconst PersonCard: React.FC<PersonCardProps> = (props) => {\r\n\r\n    const [person, setPerson] = useState<PersonInfoState[]>(Dummy_Person);\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    }, [])\r\n\r\n    async function getUserData() {\r\n        const fetchData = await fetch('https://randomuser.me/api/', {\r\n            method: 'GET',\r\n        });\r\n        const bodyParse = await fetchData.json();\r\n\r\n        const person: PersonInfoState = {\r\n            name: bodyParse.results[0].name.first,\r\n            lastName: bodyParse.results[0].name.last,\r\n            img: bodyParse.results[0].picture.large,\r\n        }\r\n\r\n        setPerson([person])\r\n    }\r\n\r\n    function liftData(scope: scopeState) {\r\n        props.scopeFn(scope);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='control-panel'>\r\n            <div className='control-panel__person'>\r\n                {(person[0].img !== '' ? <img src={person[0].img} alt=\"\" /> : '')}\r\n                <p>Report For</p>\r\n                <h3>{`${person[0].name} ${person[0].lastName}`}</h3>\r\n            </div>\r\n            <div className='control-panel__panel'>\r\n                <button onClick={liftData.bind('', 'daily')}>Daily</button>\r\n                <button onClick={liftData.bind('', 'weekly')}>Weekly</button>\r\n                <button onClick={liftData.bind('', 'monthly')}>Monthly</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonCard;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport data from './data.json'\r\nimport { scopeState } from '../../utilities/ScopeState' // TS type\r\n\r\nimport './PersonActivities.css'\r\n\r\ninterface ActivitiesState {\r\n    title: string;\r\n    timeframes: {\r\n        daily: {\r\n            current: number | null;\r\n            previous: number | null;\r\n        },\r\n        weekly: {\r\n            current: number | null,\r\n            previous: number | null;\r\n        },\r\n        monthly: {\r\n            current: number | null;\r\n            previous: number | null;\r\n        }\r\n    }\r\n}\r\n\r\ninterface PersonActivitiesProps {\r\n    newScope: 'daily' | 'weekly' | 'monthly';\r\n}\r\n\r\nconst PersonActivities: React.FC<PersonActivitiesProps> = (props) => {\r\n\r\n    const [activities, setActivities] = useState<ActivitiesState[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        getActivityData();\r\n    }, [])\r\n\r\n\r\n    async function getActivityData() {\r\n        setActivities(data);\r\n    }\r\n\r\n    function timeScope(el: ActivitiesState, target: scopeState) {\r\n        const interval = (target === 'daily' ? 'Day' : (target === 'weekly' ? 'Week' : 'Month'))\r\n        console.log(el);\r\n        return (\r\n            <div className='activities__holder' key={el.title}>\r\n                <div className={`activities__holder-${el.title} activities__holder-all`} id={el.title}>\r\n                    <div className='activities__holder-data'>\r\n                        <p>{el.title}</p>\r\n                        <p>...</p>\r\n                        <p>{el.timeframes[target].current}hrs</p>\r\n                        <p>Last {interval} - {el.timeframes[target].previous}hrs</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id='activities' className='activities'>\r\n            {\r\n                activities.map(el => {\r\n                    return (timeScope(el, props.newScope))\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PersonActivities;","import React, { useState } from 'react';\r\nimport PersonCard from './components/person_card/PersonCard';\r\nimport PersonActivities from './components/person_activities/PersonActivities'\r\n\r\nimport { scopeState } from './utilities/ScopeState' // TS type\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [scope, setScope] = useState<scopeState>('daily')\r\n\r\n  const scopeHandler = (newScope: scopeState) => {\r\n    setScope(newScope)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <PersonCard scopeFn={scopeHandler} />\r\n      <PersonActivities newScope={scope} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}