{"version":3,"sources":["components/person_card/PersonCard.tsx","components/person_activities/PersonActivities.tsx","App.tsx","index.tsx"],"names":["Dummy_Person","name","lastName","img","PersonCard","props","useState","person","setPerson","buttonsRef","useRef","a","fetch","method","fetchData","json","bodyParse","results","first","last","picture","large","getRefEl","el","current","includes","push","console","log","buttonClickHandler","id","scopeFn","currentTarget","forEach","style","color","useEffect","getUserData","className","src","alt","ref","onClick","bind","PersonActivities","activities","setActivities","data","getActivityData","map","target","interval","title","timeframes","previous","timeScope","newScope","App","scope","setScope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b16ce9.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport './PersonCard.css'\r\n\r\nimport { scopeState } from '../../utilities/ScopeState' // TS type\r\n\r\ninterface PersonInfoState {\r\n    name: string;\r\n    lastName: string;\r\n    img: string;\r\n}\r\n\r\ninterface PersonCardProps {\r\n    scopeFn: (newScope: scopeState) => void;\r\n}\r\n\r\nconst Dummy_Person: PersonInfoState[] = [{\r\n    name: '',\r\n    lastName: '',\r\n    img: '',\r\n}]\r\n\r\nconst PersonCard: React.FC<PersonCardProps> = (props) => {\r\n    const [person, setPerson] = useState<PersonInfoState[]>(Dummy_Person);\r\n    const buttonsRef = useRef<HTMLButtonElement[]>([])\r\n    buttonsRef.current = []\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    }, [])\r\n\r\n    async function getUserData() {\r\n        const fetchData = await fetch('https://randomuser.me/api/', {\r\n            method: 'GET',\r\n        });\r\n\r\n        const bodyParse = await fetchData.json();\r\n\r\n        const person: PersonInfoState = {\r\n            name: bodyParse.results[0].name.first,\r\n            lastName: bodyParse.results[0].name.last,\r\n            img: bodyParse.results[0].picture.large,\r\n        }\r\n\r\n        setPerson([person])\r\n    }\r\n\r\n    function getRefEl(el: HTMLButtonElement) {\r\n        if (el && !buttonsRef.current.includes(el)) {\r\n            buttonsRef.current.push(el);\r\n        }\r\n\r\n        console.log(buttonsRef.current)\r\n    }\r\n\r\n    function buttonClickHandler(el: React.MouseEvent) {\r\n        props.scopeFn(el.currentTarget.id as scopeState);\r\n        setActiveScope(el.currentTarget.id);\r\n    }\r\n\r\n    function setActiveScope(id: string) {\r\n        buttonsRef.current.forEach(el => el.style.color = '');\r\n        buttonsRef.current.forEach(el => {\r\n            if (el.id === id)\r\n                el.style.color = 'white';\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='control-panel'>\r\n            <div className='control-panel__person'>\r\n                {(person[0].img !== '' ? <img src={person[0].img} alt=\"\" /> : <p></p>)}\r\n                <p>Report For</p>\r\n                <h3>{`${person[0].name} ${person[0].lastName}`}</h3>\r\n            </div>\r\n            <div className='control-panel__panel'>\r\n                <button ref={getRefEl} style={{ color: 'white' }} id='daily' onClick={buttonClickHandler.bind(this)}>Daily</button>\r\n                <button ref={getRefEl} id='weekly' onClick={buttonClickHandler.bind(this)}>Weekly</button>\r\n                <button ref={getRefEl} id='monthly' onClick={buttonClickHandler.bind(this)}>Monthly</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonCard;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport data from './data.json'\r\nimport { scopeState } from '../../utilities/ScopeState' // TS type\r\n\r\nimport './PersonActivities.css'\r\n\r\ninterface ActivitiesState {\r\n    title: string;\r\n    timeframes: {\r\n        daily: {\r\n            current: number | null;\r\n            previous: number | null;\r\n        },\r\n        weekly: {\r\n            current: number | null,\r\n            previous: number | null;\r\n        },\r\n        monthly: {\r\n            current: number | null;\r\n            previous: number | null;\r\n        }\r\n    }\r\n}\r\n\r\ninterface PersonActivitiesProps {\r\n    newScope: 'daily' | 'weekly' | 'monthly';\r\n}\r\n\r\nconst PersonActivities: React.FC<PersonActivitiesProps> = (props) => {\r\n\r\n    const [activities, setActivities] = useState<ActivitiesState[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        getActivityData();\r\n    }, [])\r\n\r\n\r\n    async function getActivityData() {\r\n        setActivities(data);\r\n    }\r\n\r\n    function timeScope(el: ActivitiesState, target: scopeState) {\r\n        const interval = (target === 'daily' ? 'Day' : (target === 'weekly' ? 'Week' : 'Month'))\r\n        return (\r\n            <div className='activities__holder' key={el.title}>\r\n                <div className={`activities__holder-${el.title} activities__holder-all`} id={el.title}>\r\n                    <div className='activities__holder-data'>\r\n                        <p>{el.title}</p>\r\n                        <p>...</p>\r\n                        <p>{el.timeframes[target].current}hrs</p>\r\n                        <p>Last {interval} - {el.timeframes[target].previous}hrs</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id='activities' className='activities'>\r\n            {\r\n                activities.map(el => {\r\n                    return (timeScope(el, props.newScope))\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PersonActivities;","import React, { useState } from 'react';\r\nimport PersonCard from './components/person_card/PersonCard';\r\nimport PersonActivities from './components/person_activities/PersonActivities'\r\n\r\nimport { scopeState } from './utilities/ScopeState' // TS type\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [scope, setScope] = useState<scopeState>('daily')\r\n\r\n  const scopeHandler = (newScope: scopeState) => {\r\n    setScope(newScope)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <PersonCard scopeFn={scopeHandler} />\r\n      <PersonActivities newScope={scope} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}